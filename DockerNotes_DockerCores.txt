# Initial login to Dockerhub
docker login

# View Docker running process
docker ps

# View Docker all created process
docker ps -a

# Run Docker with interactive mode
docker run -it <IMAGE_NAME>

# Run Docker with published port access
docker run -p <LOCAL_PORT>:<DOCKER_PORT> <IMAGE_NAME>

# Stop running docker container
docker stop <CONTAINER_ID>

# Re-start stopped docker container, container is running in background by default
docker start <CONTAINER_ID>

# Re-start stopped docker container, but in attached mode
docker start -a <CONTAINER_NAME>

# In docker run, container is running in attached mode by default, running in foreground

# Docker run but containe run in detach mode
docker run -d --name <CONTAINER_NAME> -p <LOCAL_PORT>:<DOCKER_PORT> <IMAGE_NAME>

# Use attach mode to access running Docker container
docker attach <CONTAINER_NAME>

# View running containe logs
docker logs <CONTAINER_NAME>

# View running containe logs with attached mode
docker logs -f <CONTAINER_NAME>

# To run stopped containe in interactive mode
docker start -a -i <CONTAINER_NAME>

# Remove stopped container, can be use to remove multiple container
docker rm <CONTAINER_NAME> | docker rm <CONTAINER_NAME> <CONTAINER_NAME> <CONTAINER_NAME> ...

# List Docker images with few details
docker images

# Remove unused Docker image
docker rmi <IMAGE_ID>

# Remove all unused images
docker image prune -a

# Run Docker with option to remove container when it stopped
docker run -d -p 3000:80 --rm --name <CONTAINER_NAME> <IMAGE_NAME>

# Inspect image details
docker image Inspect

# Copy file into & from running container
copy into container: docker cp <DIRECTORY_PATH>/<FILE/s_NAME> <CONTAINER_NAME>:/<FOLDER_NAME>
copy from container: docker cp <CONTAINER_NAME>:/<FOLDER_NAME> <DIRECTORY_PATH>/<FILE/s_NAME>

# Challenge to run interactive docker container with python-app-bmi
docker build . -t python-bmi:1.0
docker run --name python-bmi_cont -it python-bmi:1.0
docker start -i python-bmi_cont

# Rename existing image with new name
docker tag <OLD_IMAGE_NAME>:<OLD_IMAGE_TAG> <>ACCOUNT_NAME>/<NEW_IMAGE_NAME>

# Rename is actually make a clone with new name

# Push image to repository
docker push <ACCOUNT_NAME>/<REPOSITORY_IMAGE_NAME>

# Docker pull alway download the latest image, so it can be use to update utilized image